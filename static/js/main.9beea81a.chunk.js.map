{"version":3,"sources":["actions/index.js","components/ContactItem.js","components/ContactList.js","components/App.js","reducers/contactsReducer.js","reducers/filteredContactsReducer.js","reducers/index.js","reducers/inputReducer.js","index.js"],"names":["filterContacts","contacts","input","type","payload","inputChange","ContactItem","className","this","props","companyName","id","email","React","Component","connect","ContactList","getContacts","filteredContacts","map","contact","clientId","key","renderList","state","App","onInputChange","event","target","value","style","marginTop","onChange","placeholder","INITIAL_STATE","combineReducers","action","filter","indexOf","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9beea81a.chunk.js","sourcesContent":["export const getContacts = (contacts) => {\r\n  inputChange('');\r\n  filterContacts(contacts, '');\r\n  return {\r\n    type: 'GET_CONTACTS',\r\n    payload: contacts,\r\n  };\r\n};\r\n\r\nexport const filterContacts = (contacts, input) => {\r\n  return {\r\n    type: 'FILTER_CONTACTS',\r\n    payload: contacts,\r\n    input: input,\r\n  };\r\n};\r\n\r\nexport const inputChange = (input) => {\r\n  return {\r\n    type: 'INPUT_CHANGE',\r\n    payload: input,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"item\">\r\n        <i className=\"large user middle aligned icon\"></i>\r\n        <div className=\"content\">\r\n          <div className=\"content\">\r\n            <h1 className=\"header\">{this.props.companyName}</h1>\r\n            <div className=\"description\">\r\n              <p>{`client number: ${this.props.id} email: ${this.props.email}`}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(ContactItem);\r\n","import React from 'react';\r\nimport { getContacts } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\n\r\nclass ContactList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getContacts(this.props.contacts);\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.filteredContacts.map((contact) => {\r\n      return (\r\n        <ContactItem\r\n          email={contact.email}\r\n          companyName={contact.companyName}\r\n          id={contact.clientId}\r\n          key={contact.clientId}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { filteredContacts: state.filteredContacts, contacts: state.contacts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getContacts })(ContactList);\r\n","import React from 'react';\r\nimport ContactList from './ContactList';\r\nimport { inputChange, filterContacts } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends React.Component {\r\n  onInputChange = (event) => {\r\n    this.props.inputChange(event.target.value);\r\n    this.props.filterContacts(this.props.contacts, event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui two column centered grid\"\r\n        style={{ marginTop: '10px' }}\r\n      >\r\n        <div className=\"column\">\r\n          <div className=\"ui three column centered grid\">\r\n            <div className=\"column\">\r\n              <div className=\"ui left icon input\">\r\n                <input\r\n                  value={this.props.input}\r\n                  onChange={this.onInputChange}\r\n                  placeholder=\"Search contact...\"\r\n                ></input>\r\n                <i className=\"users icon\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { input: state.input, contacts: state.contacts };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  inputChange,\r\n  filterContacts,\r\n})(App);\r\n","const INITIAL_STATE = [\r\n  {\r\n    companyName: 'capsule corp',\r\n    clientId: '1',\r\n    email: 'something@something.com',\r\n  },\r\n  {\r\n    companyName: 'mandelorian',\r\n    clientId: '2',\r\n    email: 'somewhere@somewhere.org',\r\n  },\r\n  {\r\n    companyName: 'fellowship of the ring',\r\n    clientId: '3',\r\n    email: 'somehow@somehow.co.il',\r\n  },\r\n  {\r\n    companyName: 'blue man group',\r\n    clientId: '4',\r\n    email: 'mehow@how.co.il',\r\n  },\r\n  {\r\n    companyName: 'daft punk',\r\n    clientId: '5',\r\n    email: 'somew@some.co.il',\r\n  },\r\n  {\r\n    companyName: 'strawberries inc',\r\n    clientId: '6',\r\n    email: 'how@so.co.il',\r\n  },\r\n];\r\n\r\nexport const contactReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'GET_CONTACTS':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = [\r\n  {\r\n    companyName: 'capsule corp',\r\n    clientId: '1',\r\n    email: 'something@something.com',\r\n  },\r\n  {\r\n    companyName: 'mandelorian',\r\n    clientId: '2',\r\n    email: 'somewhere@somewhere.org',\r\n  },\r\n  {\r\n    companyName: 'fellowship of the ring',\r\n    clientId: '3',\r\n    email: 'somehow@somehow.co.il',\r\n  },\r\n  {\r\n    companyName: 'blue man group',\r\n    clientId: '4',\r\n    email: 'mehow@how.co.il',\r\n  },\r\n  {\r\n    companyName: 'daft punk',\r\n    clientId: '5',\r\n    email: 'somew@some.co.il',\r\n  },\r\n  {\r\n    companyName: 'strawberries inc',\r\n    clientId: '6',\r\n    email: 'how@so.co.il',\r\n  },\r\n];\r\n\r\nexport const filteredContactReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_CONTACTS':\r\n      return action.payload.filter(\r\n        (contact) => contact.companyName.indexOf(action.input) !== -1\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { inputReducer } from './inputReducer';\r\nimport { contactReducer } from './contactsReducer';\r\nimport { filteredContactReducer } from './filteredContactsReducer';\r\n\r\nexport default combineReducers({\r\n  contacts: contactReducer,\r\n  filteredContacts: filteredContactReducer,\r\n  input: inputReducer,\r\n});\r\n","export const inputReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}